<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1.0">
  <title>Checkout</title>
  <script src="https://js.stripe.com/v3/"></script>
  <link href="https://stackpath.bootstrapcdn.com/bootstrap/4.5.2/css/bootstrap.min.css" rel="stylesheet">
  <style>
    body {
      background-color: #f8f9fa;
      font-family: Arial, sans-serif;
      padding: 20px;
    }
    h1 {
      margin-bottom: 20px;
      text-align: center;
    }
    .container {
      max-width: 500px;
      margin: 0 auto;
      background: #ffffff;
      padding: 20px;
      border-radius: 8px;
      box-shadow: 0 4px 8px rgba(0,0,0,0.1);
    }
    #payment-element {
      margin-bottom: 20px;
    }
    #submit {
      width: 100%;
      background-color: #fe424d;
      color: #ffffff;
      border: none;
      border-radius: 5px;
      padding: 15px;
      font-size: 16px;
      cursor: pointer;
      transition: background-color 0.3s;
    }
    #submit:hover {
      background-color: #fe424d;
    }
    .spinner {
      border: 3px solid #f3f3f3;
      border-top: 3px solid #ffffff;
      border-radius: 50%;
      width: 24px;
      height: 24px;
      animation: spin 1s linear infinite;
      display: inline-block;
      vertical-align: middle;
    }
    .hidden {
      display: none;
    }
    @keyframes spin {
      0% { transform: rotate(0deg); }
      100% { transform: rotate(360deg); }
    }
    #payment-message {
      margin-top: 20px;
      padding: 10px;
      border-radius: 5px;
      text-align: center;
    }
    .success {
      background-color: #d4edda;
      color: #fe424d;
    }
    .error {
      background-color: #f8d7da;
      color: #721c24;
    }
  </style>
</head>
<body>
  <h1>Checkout</h1>
  <div class="container">
    <form id="payment-form">
      <div id="payment-element">
        <!--Stripe.js injects the Payment Element-->
      </div>
      <button id="submit" style="background-color: #bc8880;">
        <div class="spinner hidden" id="spinner"></div>
        <span id="button-text">Pay now</span>
      </button>
      <div id="payment-message" class="hidden"></div>
    </form>
  </div>
  <script>
    const stripe = Stripe(
      "pk_test_51OokAHCUp6ahQS49aiob0nZRXJyOirhqHmSjk2HafXy5TQdeWRu2GIWkkg6G2Yt0CoS7Fowf065ZFZGckasbHeMI00v9UGaPCu"
    ); // Replace with your publishable key

    let elements;

    initialize();
    checkStatus();

    document
      .querySelector("#payment-form")
      .addEventListener("submit", handleSubmit);

    // Fetches a payment intent and captures the client secret
    async function initialize() {
      const listing = `<%= listing.price%>`;

      const response = await fetch("/create-payment-intent", {
        method: "POST",
        headers: { "Content-Type": "application/json" },
        body: JSON.stringify({ amount: listing }),
      });
      const { clientSecret } = await response.json();

      const appearance = {
        theme: "stripe",
      };
      elements = stripe.elements({ appearance, clientSecret });

      const paymentElementOptions = {
        layout: "tabs",
      };

      const paymentElement = elements.create(
        "payment",
        paymentElementOptions
      );
      paymentElement.mount("#payment-element");
    }

    async function handleSubmit(e) {
      e.preventDefault();
      setLoading(true);
      const { error } = await stripe.confirmPayment({
        name: "harshit",
        address: {
          line1: "510 Townsend St",
          postal_code: "98140",
          city: "San Francisco",
          state: "CA",
          country: "US",
        },
        elements,
        confirmParams: {
          return_url: `http://localhost:8080/success`,
        },
      });

      if (error.type === "card_error" || error.type === "validation_error") {
        showMessage(error.message, 'error');
      } else {
        showMessage("An unexpected error occurred.", 'error');
      }

      setLoading(false);
    }

    async function checkStatus() {
      const clientSecret = new URLSearchParams(window.location.search).get(
        "payment_intent_client_secret"
      );

      if (!clientSecret) {
        return;
      }

      const { paymentIntent } = await stripe.retrievePaymentIntent(
        clientSecret
      );

      switch (paymentIntent.status) {
        case "succeeded":
          showMessage("Payment succeeded!", 'success');
          break;
        case "processing":
          showMessage("Your payment is processing.");
          break;
        case "requires_payment_method":
          showMessage("Your payment was not successful, please try again.");
          break;
        default:
          showMessage("Something went wrong.", 'error');
          break;
      }
    }

    function showMessage(messageText, type = 'success') {
      const messageContainer = document.querySelector("#payment-message");

      messageContainer.classList.remove("hidden");
      messageContainer.classList.add(type);
      messageContainer.textContent = messageText;

      setTimeout(function () {
        messageContainer.classList.add("hidden");
        messageContainer.textContent = "";
      }, 4000);
    }

    function setLoading(isLoading) {
      if (isLoading) {
        document.querySelector("#submit").disabled = true;
        document.querySelector("#spinner").classList.remove("hidden");
        document.querySelector("#button-text").classList.add("hidden");
      } else {
        document.querySelector("#submit").disabled = false;
        document.querySelector("#spinner").classList.add("hidden");
        document.querySelector("#button-text").classList.remove("hidden");
      }
    }
  </script>
</body>
</html>
